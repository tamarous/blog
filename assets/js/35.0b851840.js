(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{391:function(t,n,a){"use strict";a.r(n);var r=a(42),s=Object(r.a)({},(function(){var t=this,n=t.$createElement,a=t._self._c||n;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"最大公约数和最小公倍数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#最大公约数和最小公倍数"}},[t._v("#")]),t._v(" 最大公约数和最小公倍数")]),t._v(" "),a("h2",{attrs:{id:"问题描述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#问题描述"}},[t._v("#")]),t._v(" 问题描述")]),t._v(" "),a("p",[t._v("已知两个正整数a和b，求这两个数的最大公约数和最小公倍数")]),t._v(" "),a("h2",{attrs:{id:"输入"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#输入"}},[t._v("#")]),t._v(" 输入")]),t._v(" "),a("p",[t._v("两个正整数a和b")]),t._v(" "),a("h2",{attrs:{id:"输出"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#输出"}},[t._v("#")]),t._v(" 输出")]),t._v(" "),a("p",[t._v("GCD(a,b)和LCM(a,b)")]),t._v(" "),a("h2",{attrs:{id:"分析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分析"}},[t._v("#")]),t._v(" 分析")]),t._v(" "),a("p",[a("strong",[t._v("GCD(a,b)")]),t._v(" = GCD(a,b - a) = GCD(a, b - 2a) = ... = "),a("strong",[t._v("GCD(a, b % a)")])]),t._v(" "),a("p",[a("strong",[t._v("LCM(a,b) = a * b / GCD(a,b)")])]),t._v(" "),a("h2",{attrs:{id:"代码实现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#代码实现"}},[t._v("#")]),t._v(" 代码实现")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v('#include <iostream>\nusing namespace std;\n\n//a,b是输入的两个数，并且需要a > b\nint gcd(int a,int b) \n{\n\tint r = a % b;\n\tif(r == 0)\n\t\treturn b;\n\telse \n\t\treturn gcd(a, b % a);\n}\nint main()\n{\n\tint a,b;\n\tcin >> a >> b;\n\tif( a < b)\n\t{\n\t\tint temp = a;\n\t\ta = b;\n\t\tb = temp;\n\t}\n\tint max = gcd(a,b);\n\tint min = a*b / max;\n\tcout << "The greatest common divisor is " << max\n\t << "and the least common multiple is " << min <<endl;\n\treturn 0;\n}\n')])])]),a("h2",{attrs:{id:"求n个数的最大公约数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#求n个数的最大公约数"}},[t._v("#")]),t._v(" 求n个数的最大公约数")]),t._v(" "),a("p",[a("strong",[t._v("性质：")])]),t._v(" "),a("p",[a("strong",[t._v("GCD(a1,a2,a3) = GCD(GCD(a1,a2), a3);")])]),t._v(" "),a("p",[a("strong",[t._v("GCD(a1,a2,a3,a4) = GCD(GCD(a1,a2,a3),a4);")])]),t._v(" "),a("p",[t._v("###代码实现")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v('#include <iostream>\nusing namespace std;\nint gcd(int a,int b)\n{\n\tif(a < b)\n\t{\n\t\tint temp = a;\n\t\ta = b;\n\t\tb = temp;\n\t}\n\tint r = a % b;\n\tif ( r == 0 )\n\t\treturn b;\n\telse \n\t\treturn gcd(a,b % a);\n}\nint main()\n{\n\tint n;\n\tcin >> n;\n\tcout << "input n numbers:" << endl;\n\tint r;\n\tint a,b;\n\tcin >> r;\n\tfor(int i = 1;i <= n-1;i++)\n\t{\n\t\tcin >> b;\n\t\tr = gcd(r,b);\n\t}\n\tcout << "The gcd of n numbers is " << r << endl;\n\treturn 0;\n}\n')])])])])}),[],!1,null,null,null);n.default=s.exports}}]);