(window.webpackJsonp=window.webpackJsonp||[]).push([[105],{565:function(e,a,t){"use strict";t.r(a);var n=t(1),r=Object(n.a)({},(function(){var e=this,a=e._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"如何分析-ios-系统库的实现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何分析-ios-系统库的实现"}},[e._v("#")]),e._v(" 如何分析 iOS 系统库的实现")]),e._v(" "),a("h2",{attrs:{id:"背景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#背景"}},[e._v("#")]),e._v(" 背景")]),e._v(" "),a("p",[e._v("在 iOS 应用的 crash 治理过程中，有相当一大部分问题最终的堆栈是在系统库之中的，因此为了解决这些问题，就需要通过逆向手段来分析系统库的内在逻辑，找到 crash 发生的原因。本文介绍如何利用 "),a("code",[e._v("dyld_shared_cache")]),e._v(" 和 "),a("a",{attrs:{href:"https://www.hopperapp.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Hopper"),a("OutboundLink")],1),e._v(" 进行分析。")]),e._v(" "),a("h2",{attrs:{id:"获取系统库二进制文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#获取系统库二进制文件"}},[e._v("#")]),e._v(" 获取系统库二进制文件")]),e._v(" "),a("h3",{attrs:{id:"从真机上获取系统库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#从真机上获取系统库"}},[e._v("#")]),e._v(" 从真机上获取系统库")]),e._v(" "),a("p",[e._v("进行逆向分析的第一步，是获取系统库的二进制文件。如果你有一台 iPhone 设备，并且你要分析的 crash 就发生在这个设备或者这个设备对应的系统版本上，那么获取系统库二进制文件就非常简单，只需将设备连接到 Mac 上，然后在 Xcode 中将它选中作为 Build Target，Xcode 就会从 iPhone 中拷贝出所需的文件。")]),e._v(" "),a("p",[a("img",{attrs:{src:"https://tamarous-blog-1256169911.cos.ap-chengdu.myqcloud.com/2021/12/15/16395763851488.jpg",alt:"16395763851488"}})]),e._v(" "),a("p",[e._v("这些文件会被拷贝到在 "),a("code",[e._v("~/Library/Developer/Xcode/iOS DeviceSupport/")]),e._v(" 目录下，按照设备系统版本分门别类存储，如图所示：")]),e._v(" "),a("p",[a("img",{attrs:{src:"https://tamarous-blog-1256169911.cos.ap-chengdu.myqcloud.com/2021/12/15/16395771725307.jpg",alt:"16395771725307"}})]),e._v(" "),a("h3",{attrs:{id:"获取-dyld-shared-cache"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#获取-dyld-shared-cache"}},[e._v("#")]),e._v(" 获取 dyld_shared_cache")]),e._v(" "),a("p",[e._v("但是如果你手边没有问题发生系统的设备，比如线上突发了一个老系统的 crash ，那么这时我们就需要通过 "),a("code",[e._v("dyld_shared_cache")]),e._v(" 来进行提取了。")]),e._v(" "),a("p",[e._v("在 iOS 3.1 后，为了加快应用的启动速度，dyld 将所有系统框架的二进制都打包到了一个大的缓存文件中，在系统启动之后就会进行加载，这个文件就称为 "),a("code",[e._v("dyld_shared_cache")]),e._v("。")]),e._v(" "),a("h4",{attrs:{id:"从-ipsw-中获取"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#从-ipsw-中获取"}},[e._v("#")]),e._v(" 从 ipsw 中获取")]),e._v(" "),a("p",[a("code",[e._v("dyld_shared_cache")]),e._v(" 能够从 ipsw 文件中获得。在 "),a("a",{attrs:{href:"https://ipsw.me/",target:"_blank",rel:"noopener noreferrer"}},[e._v("ipsw.me"),a("OutboundLink")],1),e._v(" 上可以下载各种 iOS 设备及各种 iOS 系统 的 ipsw 文件。下载之后，将该文件的后缀名改为 .zip，然后进行解压。在解压后的文件夹里，双击其中文件体积最大的 dmg 文件，然后进入 "),a("code",[e._v("/System/Library/Caches/com.apple.dyld/")]),e._v("，就可以将 "),a("code",[e._v("dyld_shared_cache")]),e._v(" 复制导出了。")]),e._v(" "),a("p",[a("img",{attrs:{src:"https://tamarous-blog-1256169911.cos.ap-chengdu.myqcloud.com/2021/12/04/16386267613890.jpg",alt:"16386267613890"}})]),e._v(" "),a("h3",{attrs:{id:"还原-dyld-shared-cache"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#还原-dyld-shared-cache"}},[e._v("#")]),e._v(" 还原 dyld_shared_cache")]),e._v(" "),a("p",[e._v("在导出后，还需要一些工具来将系统库从二进制文件中还原出来。苹果官方就提供了一个可用的工具："),a("a",{attrs:{href:"https://opensource.apple.com/source/dyld/dyld-433.5/launch-cache/",target:"_blank",rel:"noopener noreferrer"}},[e._v("dsc_extractor"),a("OutboundLink")],1),e._v("，不过这个工具是位于 dyld 源码中的，需要一些额外设置才能编译出来。")]),e._v(" "),a("p",[e._v("首先我们先从苹果开源网站上下载 dyld 的"),a("a",{attrs:{href:"https://opensource.apple.com/tarballs/dyld/",target:"_blank",rel:"noopener noreferrer"}},[e._v("代码"),a("OutboundLink")],1),e._v("，我这里选择的是较旧的 "),a("code",[e._v("dyld-519.2.2")]),e._v("，之所以不选最新的版本，是由于较新的版本在编译时，会有"),a("code",[e._v("CodeSigningTypes.h")]),e._v(" 和 "),a("code",[e._v("Diagnostics.h")]),e._v(" 两个头文件找不到的错误。下载解压后，进入 "),a("code",[e._v("launch-cache")]),e._v(" 目录，修改 "),a("code",[e._v("dsc_extractor.cpp")]),e._v(" main 函数之前的 "),a("code",[e._v("if 0")]),e._v(" 为 "),a("code",[e._v("if 1")]),e._v("，然后再用 clang 进行编译：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("clang++ -o dsc_extractor ./dsc_extractor.cpp dsc_iterator.cpp\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("p",[e._v("编译出可执行文件后，我们就可以使用此可执行文件来从 "),a("code",[e._v("dyld_shared_cache")]),e._v(" 中导出系统库：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("./dsc_extractor dyld_shared_cache_arm64e ./frameworks\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://tamarous-blog-1256169911.cos.ap-chengdu.myqcloud.com/2021/12/04/16386332421419.jpg",alt:"16386332421419"}})]),e._v(" "),a("p",[e._v("如果上述过程显得过于繁琐，"),a("a",{attrs:{href:"https://github.com/dreampiggy/dsc_extractor/blob/master/bin/dsc_extractor",target:"_blank",rel:"noopener noreferrer"}},[e._v("GitHub"),a("OutboundLink")],1),e._v(" 上也有人提供了编译好的 dsc_extractor 可供直接下载使用。")]),e._v(" "),a("p",[e._v("除了上述苹果官方提供的工具外，"),a("a",{attrs:{href:"https://github.com/arandomdev/DyldExtractor",target:"_blank",rel:"noopener noreferrer"}},[e._v("DyldExtractor"),a("OutboundLink")],1),e._v(" 也是一个不错的工具：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("python3 -m pip install dyldextractor\ndyldex_all dyld_shared_cache_arm64e\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br")])]),a("p",[e._v("在获取到系统库的二进制之后，就可以使用如 Hopper 及 IDA 这样的工具来进行逆向分析了。")]),e._v(" "),a("h2",{attrs:{id:"使用-hopper-进行分析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用-hopper-进行分析"}},[e._v("#")]),e._v(" 使用 Hopper 进行分析")]),e._v(" "),a("p",[e._v("Hopper 是一个知名的反汇编软件，功能非常强大，尤其是对于 Objective-C 的反汇编专门进行了优化，能够从二进制中生成较为易读的伪代码，因此对于分析 iOS 系统库执行过程来说，是一件神兵利器。Hopper 是一个收费软件，不付费的话每次可以免费使用 30 分钟，对于一般的分析问题来说也够用了。推荐大家尽量支持正版。")]),e._v(" "),a("p",[e._v("下面用一个真实的线上案例来介绍下 Hopper 的使用。系统堆栈如下：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("Thread 0 name:  com.apple.main-thread\nThread 0: Crashed:\n0   libobjc.A.dylib                 0x000000018ac37530 _objc_msgSend (in libobjc.A.dylib) + 16\n1   UIKitCore                       0x00000001b80b6058 -[UIKeyboardImpl _keyboardBehaviorState] (in UIKitCore) + 436\n2   UIKitCore                       0x00000001b80b63c4 -[UIKeyboardImpl updatedKeyBehaviors] (in UIKitCore) + 32\n3   UIKitCore                       0x00000001b80b64f8 -[UIKeyboardImpl _updateKeyboardConfigurations] (in UIKitCore) + 172\n4   UIKitCore                       0x00000001b809240c -[UIKeyboardImpl dealloc] (in UIKitCore) + 356\n5   UIKitCore                       0x00000001b80c2ae8 -[UIKeyboardInputManagerMux setResponseDelegate:] (in UIKitCore) + 64\n6   UIKitCore                       0x00000001b80a881c -[UIKeyboardImpl setInputManagerFromCurrentInputMode] (in UIKitCore) + 96\n7   UIKitCore                       0x00000001b8097d4c -[UIKeyboardImpl setInputModeFromPreferences] (in UIKitCore) + 360\n8   UIKitCore                       0x00000001b8091d3c -[UIKeyboardImpl initWithFrame:] (in UIKitCore) + 840\n9   UIKitCore                       0x00000001b808f950 +[UIKeyboardImpl sharedInstance] (in UIKitCore) + 72\n10  UIKitCore                       0x00000001b8083c50 -[UIKeyboard activate] (in UIKitCore) + 248\n11  UIKitCore                       0x00000001b80fa98c -[UIKeyboardAutomatic activate] (in UIKitCore) + 124\n12  UIKitCore                       0x00000001b80fa514 -[UIKeyboardAutomatic willResume:] (in UIKitCore) + 260\n13  CoreFoundation                  0x000000018b9b8218 ___CFNOTIFICATIONCENTER_IS_CALLING_OUT_TO_AN_OBSERVER__ (in CoreFoundation) + 16\n14  CoreFoundation                  0x000000018b9b81e4 ____CFXRegistrationPost_block_invoke (in CoreFoundation) + 60\n15  CoreFoundation                  0x000000018b9b76d8 __CFXRegistrationPost (in CoreFoundation) + 388\n16  CoreFoundation                  0x000000018b9b7384 ____CFXNotificationPost_block_invoke (in CoreFoundation) + 92\n17  CoreFoundation                  0x000000018b930c50 -[_CFXNotificationRegistrar find:object:observer:enumerator:] (in CoreFoundation) + 1492\n18  CoreFoundation                  0x000000018b9b6e34 __CFXNotificationPost (in CoreFoundation) + 692\n19  Foundation                      0x000000018c3a01a0 -[NSNotificationCenter postNotificationName:object:userInfo:] (in Foundation) + 64\n20  UIKitCore                       0x00000001b827cf7c -[UIApplication _sendWillEnterForegroundCallbacks] (in UIKitCore) + 228\n21  UIKitCore                       0x00000001b7b27be0 -[__UICanvasLifecycleMonitor_Compatability activateEventsOnly:withContext:completion:] (in UIKitCore) + 2032\n22  UIKitCore                       0x00000001b7b25b60 ___82-[_UIApplicationCanvas _transitionLifecycleStateWithTransitionContext:completion:]_block_invoke (in UIKitCore) + 740\n23  UIKitCore                       0x00000001b7b25828 -[_UIApplicationCanvas _transitionLifecycleStateWithTransitionContext:completion:] (in UIKitCore) + 424\n24  UIKitCore                       0x00000001b7b2a368 ___125-[_UICanvasLifecycleSettingsDiffAction performActionsForCanvas:withUpdatedScene:settingsDiff:fromSettings:transitionContext:]_block_invoke (in UIKitCore) + 216\n25  UIKitCore                       0x00000001b7b2b14c __performActionsWithDelayForTransitionContext (in UIKitCore) + 108\n26  UIKitCore                       0x00000001b7b2a220 -[_UICanvasLifecycleSettingsDiffAction performActionsForCanvas:withUpdatedScene:settingsDiff:fromSettings:transitionContext:] (in UIKitCore) + 240\n27  UIKitCore                       0x00000001b7b2ef20 -[_UICanvas scene:didUpdateWithDiff:transitionContext:completion:] (in UIKitCore) + 356\n28  UIKitCore                       0x00000001b7e5f2ac -[UIApplicationSceneClientAgent scene:handleEvent:withCompletion:] (in UIKitCore) + 460\n29  FrontBoardServices              0x000000018e3c55d4 ___80-[FBSSceneImpl updater:didUpdateSettings:withDiff:transitionContext:completion:]_block_invoke_3 (in FrontBoardServices) + 220\n30  libdispatch.dylib               0x000000018b4857d0 __dispatch_client_callout (in libdispatch.dylib) + 12\n31  libdispatch.dylib               0x000000018b42a5d8 __dispatch_block_invoke_direct$VARIANT$mp (in libdispatch.dylib) + 220\n32  FrontBoardServices              0x000000018e3ff03c ___FBSSERIALQUEUE_IS_CALLING_OUT_TO_A_BLOCK__ (in FrontBoardServices) + 36\n33  FrontBoardServices              0x000000018e3fecd8 -[FBSSerialQueue _performNext] (in FrontBoardServices) + 404\n34  FrontBoardServices              0x000000018e3ff290 -[FBSSerialQueue _performNextFromRunLoopSource] (in FrontBoardServices) + 48\n35  CoreFoundation                  0x000000018b9d8f18 ___CFRUNLOOP_IS_CALLING_OUT_TO_A_SOURCE0_PERFORM_FUNCTION__ (in CoreFoundation) + 20\n36  CoreFoundation                  0x000000018b9d8e98 ___CFRunLoopDoSource0 (in CoreFoundation) + 84\n37  CoreFoundation                  0x000000018b9d8780 ___CFRunLoopDoSources0 (in CoreFoundation) + 172\n38  CoreFoundation                  0x000000018b9d36bc ___CFRunLoopRun (in CoreFoundation) + 1000\n39  CoreFoundation                  0x000000018b9d2fb0 _CFRunLoopRunSpecific (in CoreFoundation) + 432\n40  GraphicsServices                0x000000018dbd5798 _GSEventRunModal (in GraphicsServices) + 100\n41  UIKitCore                       0x00000001b8265c34 _UIApplicationMain (in UIKitCore) + 208\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br"),a("span",{staticClass:"line-number"},[e._v("11")]),a("br"),a("span",{staticClass:"line-number"},[e._v("12")]),a("br"),a("span",{staticClass:"line-number"},[e._v("13")]),a("br"),a("span",{staticClass:"line-number"},[e._v("14")]),a("br"),a("span",{staticClass:"line-number"},[e._v("15")]),a("br"),a("span",{staticClass:"line-number"},[e._v("16")]),a("br"),a("span",{staticClass:"line-number"},[e._v("17")]),a("br"),a("span",{staticClass:"line-number"},[e._v("18")]),a("br"),a("span",{staticClass:"line-number"},[e._v("19")]),a("br"),a("span",{staticClass:"line-number"},[e._v("20")]),a("br"),a("span",{staticClass:"line-number"},[e._v("21")]),a("br"),a("span",{staticClass:"line-number"},[e._v("22")]),a("br"),a("span",{staticClass:"line-number"},[e._v("23")]),a("br"),a("span",{staticClass:"line-number"},[e._v("24")]),a("br"),a("span",{staticClass:"line-number"},[e._v("25")]),a("br"),a("span",{staticClass:"line-number"},[e._v("26")]),a("br"),a("span",{staticClass:"line-number"},[e._v("27")]),a("br"),a("span",{staticClass:"line-number"},[e._v("28")]),a("br"),a("span",{staticClass:"line-number"},[e._v("29")]),a("br"),a("span",{staticClass:"line-number"},[e._v("30")]),a("br"),a("span",{staticClass:"line-number"},[e._v("31")]),a("br"),a("span",{staticClass:"line-number"},[e._v("32")]),a("br"),a("span",{staticClass:"line-number"},[e._v("33")]),a("br"),a("span",{staticClass:"line-number"},[e._v("34")]),a("br"),a("span",{staticClass:"line-number"},[e._v("35")]),a("br"),a("span",{staticClass:"line-number"},[e._v("36")]),a("br"),a("span",{staticClass:"line-number"},[e._v("37")]),a("br"),a("span",{staticClass:"line-number"},[e._v("38")]),a("br"),a("span",{staticClass:"line-number"},[e._v("39")]),a("br"),a("span",{staticClass:"line-number"},[e._v("40")]),a("br"),a("span",{staticClass:"line-number"},[e._v("41")]),a("br"),a("span",{staticClass:"line-number"},[e._v("42")]),a("br"),a("span",{staticClass:"line-number"},[e._v("43")]),a("br"),a("span",{staticClass:"line-number"},[e._v("44")]),a("br")])]),a("p",[e._v("从堆栈上来看，crash 发生在给 "),a("code",[e._v("UIKeyboardImpl")]),e._v(" 的实例发送 "),a("code",[e._v("_keyboardBehaviorState")]),e._v(" 消息时，用户设备是 iPhone 6，对应系统版本为 12.5.5。")]),e._v(" "),a("p",[e._v("按照前文方法，通过 ipsw 提取出 12.5.5 系统的 "),a("code",[e._v("UIKitCore.dylib")]),e._v("，然后将其拖入 Hopper。在拖入时，会询问需要以什么文件格式打开，一般来说以默认设置打开就好。然后在左侧面板搜索栏中，输入"),a("code",[e._v("-[UIKeyboardImpl _keyboardBehaviorState]")]),e._v("，会跳转到这个方法对应的汇编代码：")]),e._v(" "),a("p",[a("img",{attrs:{src:"https://tamarous-blog-1256169911.cos.ap-chengdu.myqcloud.com/2021/12/15/16395806199187.jpg",alt:"16395806199187"}}),e._v("\n可以看到，这个方法的汇编实现是非常复杂的，在自动生成的注释中，有很多个 "),a("code",[e._v("objc_msgSend")]),e._v("，说明这个方法内部也有很多其他的方法调用。那么内部是对给哪个对象发送消息时 crash 的呢？")]),e._v(" "),a("p",[e._v("此处，我们就需要结合用户的 crash 日志来进行分析。从我们的 APM 系统上可以下载到这个用户的原始日志，以及符号解析后的日志，这两份日志都可以用来进行更为细致的分析。")]),e._v(" "),a("p",[e._v("原始日志如下：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("Thread 0 name:  com.apple.main-thread\nThread 0 Crashed:\n0   libobjc.A.dylib                 0x000000018ac37530 0x18ac1a000 + 120112 ((null)) + 0)\n1   UIKitCore                       0x00000001b80b605c 0x1b79a9000 + 7393372 ((null)) + 0)\n2   UIKitCore                       0x00000001b80b63c8 0x1b79a9000 + 7394248 ((null)) + 0)\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br")])]),a("p",[e._v("从原始日志中，我们可以直接得到调用 objc_msgSend 的位置在"),a("code",[e._v("-[UIKeyboardImpl _keyboardBehaviorState]")]),e._v(" 中的偏移量为 "),a("code",[e._v("7393372")]),e._v("。")]),e._v(" "),a("p",[e._v("或者从符号解析后的日志中：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("Thread 0 name:  com.apple.main-thread\nThread 0: Crashed:\n0   libobjc.A.dylib                 0x000000018ac37530 _objc_msgSend (in libobjc.A.dylib) + 16\n1   UIKitCore                       0x00000001b80b6058 -[UIKeyboardImpl _keyboardBehaviorState] (in UIKitCore) + 436\n2   UIKitCore                       0x00000001b80b63c4 -[UIKeyboardImpl updatedKeyBehaviors] (in UIKitCore) + 32\n3   UIKitCore                       0x00000001b80b64f8 -[UIKeyboardImpl _updateKeyboardConfigurations] (in UIKitCore) + 172\n4   UIKitCore                       0x00000001b809240c -[UIKeyboardImpl dealloc] (in UIKitCore) + 356\n\n\nBinary Images:\n       0x1b79a9000 -        0x1b8a8dfff  UIKitCore arm64 <005cfa346e6a3f36ba96e3db92f09362> /System/Library/PrivateFrameworks/UIKitCore.framework/UIKitCore\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br"),a("span",{staticClass:"line-number"},[e._v("11")]),a("br")])]),a("p",[e._v("可以计算出偏移地址为")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("0x00000001b80b6058 - 0x1b79a9000 = 0x70D058 = 7393368\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("p",[e._v("得到了偏移量之后，在 Hopper 中点击 "),a("code",[e._v("Navigate -> Go To File Offset")]),e._v("，在弹出的输入框中输入上述偏移量，就可以跳转到 crash 发生时的具体行数，如图中蓝色行所示：")]),e._v(" "),a("p",[a("img",{attrs:{src:"https://tamarous-blog-1256169911.cos.ap-chengdu.myqcloud.com/2021/12/16/16395840700261.jpg",alt:"16395840700261"}})]),e._v(" "),a("p",[e._v("点击 Hopper 右上角按钮，")]),e._v(" "),a("p",[a("img",{attrs:{src:"https://tamarous-blog-1256169911.cos.ap-chengdu.myqcloud.com/2021/12/16/16395841682241.jpg",alt:"16395841682241"}})]),e._v(" "),a("p",[e._v("即可将这段汇编代码转换为伪代码：")]),e._v(" "),a("p",[a("img",{attrs:{src:"https://tamarous-blog-1256169911.cos.ap-chengdu.myqcloud.com/2021/12/16/16395843037293.jpg",alt:"16395843037293"}})]),e._v(" "),a("p",[e._v("从图中我们可以看到，是在向 "),a("code",[e._v("UIKeyboardImpl")]),e._v(" 的 "),a("code",[e._v("m_candidateResultSet")]),e._v(" 实例变量发送 "),a("code",[e._v("hasCandidates")]),e._v(" 消息时崩溃了。因此我们需要继续去分析这个实例变量的赋值及使用场景，看看是不是存在野指针的可能性，其分析过程也是类似的。")]),e._v(" "),a("p",[e._v("以上即为使用 Hopper 来分析系统库内部实现的思路。")])])}),[],!1,null,null,null);a.default=r.exports}}]);