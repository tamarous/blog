(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{499:function(s,n,a){"use strict";a.r(n);var e=a(1),t=Object(e.a)({},(function(){var s=this,n=s.$createElement,a=s._self._c||n;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"leetcode-63-unique-paths-ii"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#leetcode-63-unique-paths-ii"}},[s._v("#")]),s._v(" LeetCode-63-Unique Paths Ⅱ")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://leetcode.com/problems/unique-paths-ii/description/",target:"_blank",rel:"noopener noreferrer"}},[s._v("这道题"),a("OutboundLink")],1),s._v("是"),a("a",{attrs:{href:"http://www.tamarous.com/2018/01/09/unique-paths/",target:"_blank",rel:"noopener noreferrer"}},[s._v("Unique Path"),a("OutboundLink")],1),s._v("的续集。")]),s._v(" "),a("p",[s._v("题意：输入一个二维数组，这个二维数组的元素如果是0，表示对应网格处没有障碍，可以正常向下或向右移动；如果这个数字是1，表示对应网格处有个障碍，机器人🤖将不能通过。")]),s._v(" "),a("p",[s._v("思路：\n（1）首先我们考虑一下特殊情况。如果第一个网格或最后一个网格对应的数字为1，那么意味着是不可达的，因此直接返回0即可。\n（2）排除掉这两种情况后，我们还是先生成一个二维数组 dp，dp[i][j]表示走到图中第 i 行第 j 列个网格点共有多少种走法。首先考虑第一行。如果某个位置的 "),a("code",[s._v("obstacle[0][j] = 1")]),s._v("，那么这个网格点以及它右面和它下面的其他网格点都无法到达，因此我们需要一个标记 flag 来表示是否遇到了 obstacle = 1的情况。如果 "),a("code",[s._v("flag = true")]),s._v("，那么"),a("code",[s._v("dp[0][j] = 1")]),s._v("。只有当 "),a("code",[s._v("flag != true && obstacle[0][j] != 1")]),s._v(" 时，有 "),a("code",[s._v("dp[0][j] = 1")]),s._v("。第一列也是类似的。\n（3）然后考虑第 i 行第 j 列的网格点。对于 dp[i][j] 来说，如果 "),a("code",[s._v("obstacle[i][j] = 0")]),s._v("，那么 "),a("code",[s._v("dp[i][j] = dp[i-1][j] + dp[i][j-1]")]),s._v("；如果"),a("code",[s._v("obstacle[i][j] = 1")]),s._v("，那么 "),a("code",[s._v("dp[i][j] = 0")]),s._v("。这就是该题的状态转移方程。")]),s._v(" "),a("p",[s._v("代码如下：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("class Solution {\npublic:\n    int uniquePathsWithObstacles(vector<vector<int>>& obstacleGrid) {\n        int m = obstacleGrid.size();\n        int n = obstacleGrid[0].size();\n        \n        vector<vector<int> > dp(m,vector<int>(n));\n        bool flag = false;\n        if(obstacleGrid[0][0] == 1) {\n            return 0;\n        }\n        for(int i = 0; i < m; i++) {\n            if (obstacleGrid[i][0] != 1 && !flag) {\n                dp[i][0] = 1;\n            } else {\n                if (obstacleGrid[i][0] == 1) {\n                    flag = true;\n                    dp[i][0] = 0;\n                } else if (flag) {\n                    dp[i][1] = 0;\n                }\n            }\n        }\n        flag = false;\n        for(int i = 1; i < n; i++) {\n            if (obstacleGrid[0][i] != 1 && !flag) {\n                dp[0][i] = 1;\n            } else {\n                if (obstacleGrid[0][i] == 1) {\n                    flag = true;\n                    dp[0][i] = 0;\n                } else if (flag) {\n                    dp[0][i] = 0;\n                }\n            }\n        }\n        \n        for(int i = 1; i < m; i++) {\n            for(int j = 1; j < n; j++) {\n                dp[i][j] = obstacleGrid[i][j] != 1 ? dp[i-1][j] + dp[i][j-1] : 0;\n            }\n        }\n        return dp[m-1][n-1] = obstacleGrid[m-1][n-1] != 1?dp[m-1][n-1]:0;\n    }\n};\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br"),a("span",{staticClass:"line-number"},[s._v("42")]),a("br"),a("span",{staticClass:"line-number"},[s._v("43")]),a("br"),a("span",{staticClass:"line-number"},[s._v("44")]),a("br"),a("span",{staticClass:"line-number"},[s._v("45")]),a("br")])])])}),[],!1,null,null,null);n.default=t.exports}}]);