(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{486:function(n,s,e){"use strict";e.r(s);var t=e(1),a=Object(t.a)({},(function(){var n=this,s=n.$createElement,e=n._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[e("h1",{attrs:{id:"leetcode-120-triangle"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#leetcode-120-triangle"}},[n._v("#")]),n._v(" LeetCode-120-Triangle")]),n._v(" "),e("p",[n._v("这道题的题意是：给定一个数组形成的三角形，在从三角形的顶部出发的路径中，求节点数值相加结果为最小的和。")]),n._v(" "),e("p",[n._v("例子：输入")]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("[\n     [2],\n    [3,4],\n   [6,5,7],\n  [4,1,8,3]\n]\n")])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br")])]),e("p",[n._v("那么从顶部到底部最小的一条路径和为："),e("code",[n._v("2+3+5+1=11")]),n._v("。")]),n._v(" "),e("p",[n._v("思路：这是一道逆序的二维动态规划题，和之前看过的一道题--"),e("a",{attrs:{href:"http://blog.csdn.net/yu280265067/article/details/50854944",target:"_blank",rel:"noopener noreferrer"}},[n._v("《龙与地下城》"),e("OutboundLink")],1),n._v("非常相似，都是逆序地从下往上求 DP数组。代码很简单，就不多做分析了，相信大家一看就能看懂。")]),n._v(" "),e("p",[n._v("代码如下：")]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("class Solution {\npublic:\n    int minimumTotal(vector<vector<int>>& triangle) {\n        for (int i = triangle.size() - 2; i >= 0; i--) {\n            for (int j = 0; j < i + 1; j++) {\n                triangle[i][j] = min(triangle[i + 1][j], triangle[i + 1][j + 1]) + triangle[i][j];\n            }\n        }\n        return triangle[0][0];\n    }\n};\n")])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br"),e("span",{staticClass:"line-number"},[n._v("9")]),e("br"),e("span",{staticClass:"line-number"},[n._v("10")]),e("br"),e("span",{staticClass:"line-number"},[n._v("11")]),e("br")])])])}),[],!1,null,null,null);s.default=a.exports}}]);