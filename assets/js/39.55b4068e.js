(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{393:function(t,n,i){"use strict";i.r(n);var a=i(42),s=Object(a.a)({},(function(){var t=this,n=t.$createElement,i=t._self._c||n;return i("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[i("h1",{attrs:{id:"背包问题"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#背包问题"}},[t._v("#")]),t._v(" 背包问题")]),t._v(" "),i("h2",{attrs:{id:"描述"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#描述"}},[t._v("#")]),t._v(" 描述")]),t._v(" "),i("p",[t._v("现在有很多物品（它们是可以分割的），我们知道它们每个物品的单位重量的价值v和重量w（1<=v,w<=10）；如果给你一个背包它能容纳的重量为m（10<=m<=20）,你所要做的就是把物品装到背包里，使背包里的物品的价值总和最大。")]),t._v(" "),i("h2",{attrs:{id:"输入"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#输入"}},[t._v("#")]),t._v(" 输入")]),t._v(" "),i("p",[t._v("第一行输入一个正整数n（1<=n<=5）,表示有n组测试数据；\n随后有n测试数据，每组测试数据的第一行有两个正整数s，m（1<=s<=10）;s表示有s个物品。接下来的s行每行有两个正整数v，w。")]),t._v(" "),i("h2",{attrs:{id:"输出"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#输出"}},[t._v("#")]),t._v(" 输出")]),t._v(" "),i("p",[t._v("输出每组测试数据中背包内的物品的价值和，每次输出占一行。")]),t._v(" "),i("h2",{attrs:{id:"样例输入"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#样例输入"}},[t._v("#")]),t._v(" 样例输入")]),t._v(" "),i("div",{staticClass:"language- extra-class"},[i("pre",[i("code",[t._v("1\n3 15\n5 10\n2 8\n3 9\n")])])]),i("h2",{attrs:{id:"样例输出"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#样例输出"}},[t._v("#")]),t._v(" 样例输出")]),t._v(" "),i("div",{staticClass:"language- extra-class"},[i("pre",[i("code",[t._v("65\n")])])]),i("h2",{attrs:{id:"代码实现"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#代码实现"}},[t._v("#")]),t._v(" 代码实现")]),t._v(" "),i("div",{staticClass:"language- extra-class"},[i("pre",[i("code",[t._v("#include <iostream>\nusing namespace std;\nint m,n;\nint s,values[11],weights[11];\n\nvoid quickSort(int low,int high)\n{\n\tint i = low,j = high;\n\tint pivot = values[(low+high)/2];\n\twhile(i <= j)\n\t{\n\t\twhile(values[i] > pivot)\n\t\t\ti++;\n\t\twhile(values[j] <  pivot)\n\t\t\tj--;\n\t\tif(i <= j)\n\t\t{\n\t\t\tint temp = values[i];\n\t\t\tvalues[i] = values[j];\n\t\t\tvalues[j] = temp;\n\t\t\ttemp = weights[i];\n\t\t\tweights[i] = weights[j];\n\t\t\tweights[j] = temp;\n\t\t\ti++;\n\t\t\tj--;\n\t\t}\n\t}\n\n\tif ( j > low)\n\t\tquickSort(low,j);\n\tif (i < high)\n\t\tquickSort(i,high);\n\n}\nvoid work(int s,int m)\n{\n\tint i = 1;\n    int totalValue = 0;\n    do{\n\t    if(m == 0)\n    \t{\n        \tbreak;\n    \t}\n    \tm -= weights[i];\n    \tif (m >= 0)\n    \t{\n        \ttotalValue += values[i]*weights[i];\n    \t}\n    \telse\n    \t{\n        \ttotalValue += values[i] * (m + weights[i]);\n    \t}\n    \ti++;\n\n\t}while (m > 0 && i <= s);\n\tcout << totalValue << endl;\n}\n\n\nint main()\n{\n\tcin >> n;\n\twhile(n--)\n\t{\n\t\tcin >> s >> m;\n\t\tfor(int i = 1; s >= i;i++)\n\t\t{\n\t\t\tcin >> values[i] >> weights[i];\n\t\t}\n\t\tquickSort(1,s);\n\t\twork(s,m);\n\t}\n\treturn 0;\n}\n")])])])])}),[],!1,null,null,null);n.default=s.exports}}]);