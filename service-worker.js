if(!self.define){const e=e=>{"require"!==e&&(e+=".js");let s=Promise.resolve();return a[e]||(s=new Promise((async s=>{if("document"in self){const a=document.createElement("script");a.src=e,document.head.appendChild(a),a.onload=s}else importScripts(e),s()}))),s.then((()=>{if(!a[e])throw new Error(`Module ${e} didn’t register its module`);return a[e]}))},s=(s,a)=>{Promise.all(s.map(e)).then((e=>a(1===e.length?e[0]:e)))},a={require:Promise.resolve(s)};self.define=(s,i,d)=>{a[s]||(a[s]=Promise.resolve().then((()=>{let a={};const r={uri:location.origin+s.slice(1)};return Promise.all(i.map((s=>{switch(s){case"exports":return a;case"module":return r;default:return e(s)}}))).then((e=>{const s=d(...e);return a.default||(a.default=s),a}))})))}}define("./service-worker.js",["./workbox-2c301fb6"],(function(e){"use strict";e.setCacheNameDetails({prefix:"mr-hope"}),self.addEventListener("message",(e=>{e.data&&"SKIP_WAITING"===e.data.type&&self.skipWaiting()})),e.clientsClaim(),e.precacheAndRoute([{url:"assets/css/0.styles.8b5d14a7.css",revision:"7f76c85b99428053e87d88c91423ae9f"},{url:"assets/img/danger-dark.7b1d6aa1.svg",revision:"7b1d6aa1bdcf013d0edfe316ab770f8e"},{url:"assets/img/danger.b143eda2.svg",revision:"b143eda243548a9982491dca4c81eed5"},{url:"assets/img/default-skin.b257fa9c.svg",revision:"b257fa9c5ac8c515ac4d77a667ce2943"},{url:"assets/img/info-dark.f8a43cf6.svg",revision:"f8a43cf67fa96a27a078530a3a43253c"},{url:"assets/img/info.88826912.svg",revision:"88826912d81d91c9e2d03164cd1481a1"},{url:"assets/img/search.83621669.svg",revision:"83621669651b9a3d4bf64d1a670ad856"},{url:"assets/img/tip-dark.075a244c.svg",revision:"075a244c83d1403c167defe81b4d7fe7"},{url:"assets/img/tip.a2b80aa5.svg",revision:"a2b80aa50b769a26da12fe352322a657"},{url:"assets/img/warning-dark.aac7e30c.svg",revision:"aac7e30c5fafc6748e21f7a9ef546698"},{url:"assets/img/warning.ec428b6d.svg",revision:"ec428b6d6d45ac5d0c610f08d757f40f"},{url:"assets/js/57.6a3c2500.js",revision:"8fdaf6c989d43e515d257d77f288611a"},{url:"assets/js/app.120ddba4.js",revision:"175cd80cecc95c455da5448ae2ce6e67"},{url:"assets/js/layout-Blog.a4cf1303.js",revision:"0500c059d4d83c883a386ad7d90fa24d"},{url:"assets/js/layout-Layout.f3e9cb51.js",revision:"a1ec8439042bd2daeba4549b5083c02b"},{url:"assets/js/layout-NotFound.4f30cc8f.js",revision:"f0a1f9346098ff449a08ef56b6b0e5db"},{url:"assets/js/layout-Slide.a59c0f9f.js",revision:"170b1c3045a8af99f8fdb0b4f6254125"},{url:"assets/js/page-Aspects源码分析.46df36dc.js",revision:"a68bd0abb0d29bd8f6f753334236238e"},{url:"assets/js/page-EasyTuple源代码分析.5a028ed7.js",revision:"11efaf0a8fd3b0784504e54c9d2a2723"},{url:"assets/js/page-Hello!.8bd6f2a7.js",revision:"1dd0fbc3cf66da6413391bc61039a8f1"},{url:"assets/js/page-Home.26b84a0b.js",revision:"df1b08f8afcf739a19f5bf9ff098bc24"},{url:"assets/js/page-LeetCode-100-SameTree及572-SubtreeofAnotherTree.377de91c.js",revision:"59d1eab7f70e159071d20e4d1642ba98"},{url:"assets/js/page-LeetCode-101-SymmetricTree.e101aff4.js",revision:"0514382feb4f53ccd24a8563c3092f6d"},{url:"assets/js/page-LeetCode-112-PathSum.55140f11.js",revision:"9080be83ed91f997a73f99aba7d9bd7c"},{url:"assets/js/page-LeetCode-113-PathSumⅡ.834cba95.js",revision:"b23a40f89989be4be54f65f4a232ad98"},{url:"assets/js/page-LeetCode-120-Triangle.d7f211b4.js",revision:"aa58861ea7312f4086c2839231bdbf4d"},{url:"assets/js/page-LeetCode-191-Numberof1Bits.85832ca1.js",revision:"69a96d8c751d4a18bc3f2b0e8a4a4181"},{url:"assets/js/page-LeetCode-198-HouseRobber.45404347.js",revision:"431e4ae663256dbbf10829a840b25b63"},{url:"assets/js/page-LeetCode-2-AddTwoNumbers.7112b7fd.js",revision:"042dea386aa4ab141d6c0349af172871"},{url:"assets/js/page-LeetCode-21-MergeTwoSortedLists.ed4d9942.js",revision:"833e14f133ed5b2adb3a2ad567bbf0e8"},{url:"assets/js/page-LeetCode-234-PalindromeLinkedList.99393483.js",revision:"a07787edde7c2b3514c742f1fb74e68b"},{url:"assets/js/page-LeetCode-238-ProductofArrayExceptSelf.77498a7f.js",revision:"f6f13aecf039701a1915e55e762723eb"},{url:"assets/js/page-LeetCode-28-ImplementstrStr().fbca4d4e.js",revision:"befe5c24ea78705ceddfebc063c394c7"},{url:"assets/js/page-LeetCode-347-TopKFrequentElements.705e2583.js",revision:"67fbeaafcd605e40f02a122d349c938c"},{url:"assets/js/page-LeetCode-437-PathSumⅢ.f0ad4f8f.js",revision:"129391efed5d7434922771ab907571e6"},{url:"assets/js/page-LeetCode-48-RotateImage.c05e2370.js",revision:"737f53bcf28c9d1e37fa71637518d1ee"},{url:"assets/js/page-LeetCode-494-TargetSum.cf82631c.js",revision:"aa2bf513bd75dd055cfdc2c33bacce2e"},{url:"assets/js/page-LeetCode-62-UniquePaths.edae8b29.js",revision:"444af3a5f3752c05e8fcf86a198ae6bf"},{url:"assets/js/page-LeetCode-63-UniquePathsⅡ.c5329281.js",revision:"844a506ebb6c33cdb74eebcad27be4b8"},{url:"assets/js/page-LeetCode.453ec4f4.js",revision:"9c8704eba0b1bd4a96b1e1955caed7c1"},{url:"assets/js/page-LeetCode上几道经典的排列组合题.a083c017.js",revision:"4f909a3a97d281e33152b4e4acd87ea9"},{url:"assets/js/page-Masonry源代码剖析.a0bf9e9e.js",revision:"96d6fab0e0dc97fa7f393791fcd562ba"},{url:"assets/js/page-SDWebImage源代码剖析-多线程策略.86c13d58.js",revision:"8c7cab49982adc7e36bcf5782386a9a4"},{url:"assets/js/page-SDWebImage源代码剖析-缓存策略.7637973d.js",revision:"93c756b277a01f3e1418b807375c2daf"},{url:"assets/js/page-SDWebImage源代码剖析-网络部分.775be273.js",revision:"5dbc27d61b43af8836ab9c1e4fc02948"},{url:"assets/js/page-不重复打印排序数组中相加和为给定值的所有二元组三元组.09ba4aaa.js",revision:"a4e7bfef5d92930dee703333f9fbfe63"},{url:"assets/js/page-二叉树的Morris遍历.bf43d66a.js",revision:"b93e9a241b3b6509b73c7b9b9dbb9fe2"},{url:"assets/js/page-最大公约数和最小公倍数.c5cd72f3.js",revision:"9198b18b9a3e788cf6c2ddfc71afbb45"},{url:"assets/js/page-最大子序列和问题.791a78cd.js",revision:"86a69946c1777011b01b6edb547a434c"},{url:"assets/js/page-前中后序遍历的非递归实现.0c5859ed.js",revision:"16efe34ab901737e42dd672a456da639"},{url:"assets/js/page-单链表问题总结.42806b40.js",revision:"9dbb41a7399cbf2e4a97187e7e8bd15b"},{url:"assets/js/page-在其他数字都出现K次的数组中找到只出现M次的数字.6c67aefc.js",revision:"abbf57dd3784113201b3bfa6913302a0"},{url:"assets/js/page-在数组中找到出现次数大于NK的数.cae79074.js",revision:"d3922068a3195fdee5c1c4e7af76d658"},{url:"assets/js/page-按层打印二叉树.ee22442e.js",revision:"d1444e18d5e01f1ab6b451e4cb3376c0"},{url:"assets/js/page-揭开Runtime的神秘面纱.9c5a4f3b.js",revision:"54b4eb6de3a37c84111950839821a0cc"},{url:"assets/js/page-数根.f5076b55.js",revision:"da3c08d68503b1d5323ce41d00fdd24b"},{url:"assets/js/page-源码分析.3bb05b64.js",revision:"6db2c335aeb43725607bbbab578943f8"},{url:"assets/js/page-独木舟上的旅行.54d7d5a1.js",revision:"8a9a0039adc39034ebdc880a99a4e43e"},{url:"assets/js/page-由前序和中序遍历恢复二叉树结构.7e767e4a.js",revision:"061b0a2a51da4a8778c63817bfa38a54"},{url:"assets/js/page-背包问题.02f5df41.js",revision:"2711f388167ae3c51a4be2219db47ee5"},{url:"assets/js/page-调整数组中元素的顺序.2ffe5b1f.js",revision:"a13bf6dd48e17081997dc48a5e4ff4b6"},{url:"assets/js/page-转圈打印矩阵.00a61bbc.js",revision:"1847f08ae440d0df17cd3c3048825ba1"},{url:"assets/js/page-递归在二叉树相关题目中的应用.bda4daae.js",revision:"f30e782707e4e572902fd73a46f1f89e"},{url:"assets/js/page-需要排序的最短子数组的长度.6fa88377.js",revision:"ce02b7529b56b3b5d4cc89690875102f"},{url:"assets/js/vendors~layout-Blog~layout-Layout~layout-NotFound.7eb8d02d.js",revision:"645e226ec2c9fea4bf7ccc534ddeca84"},{url:"assets/js/vendors~layout-Blog~layout-Layout~layout-NotFound~layout-Slide.fd9b9e80.js",revision:"de30f11a871a19299c107cf5b46cf8b9"},{url:"assets/js/vendors~layout-Layout.209c0354.js",revision:"c29a84b413f309582ee9e2aebfd9edf2"},{url:"assets/js/vendors~photo-swipe.54f2f5bc.js",revision:"87537db2702a63484caa77b4d7855968"},{url:"404.html",revision:"98777f1df7a2972884bba05261606199"},{url:"Algorithms/index.html",revision:"370aed6e121e401aff5f23e9e51ecd73"},{url:"Algorithms/LeetCode 上几道经典的排列组合题/index.html",revision:"cde3c6ae597ac0b54649d1269df58f91"},{url:"Algorithms/LeetCode-100-Same Tree及572-Subtree of Another Tree/index.html",revision:"d2799a0dda016f107ff2f30244b95635"},{url:"Algorithms/LeetCode-101-Symmetric Tree/index.html",revision:"e15f070e41ba207677b311072576a073"},{url:"Algorithms/LeetCode-112-Path Sum/index.html",revision:"13cc61abc674dc1f712989455e296046"},{url:"Algorithms/LeetCode-113-Path Sum Ⅱ/index.html",revision:"507c83c05565ecc1d58f19b6f38d9bf6"},{url:"Algorithms/LeetCode-120-Triangle/index.html",revision:"56e0de23baef92701ee97768cd454942"},{url:"Algorithms/LeetCode-191-Number of 1 Bits/index.html",revision:"9f9ef99b44e05c87afde85f1ae4f0de9"},{url:"Algorithms/LeetCode-198-House Robber/index.html",revision:"3c5ae533676d7ba41b1c83a9c0977316"},{url:"Algorithms/LeetCode-2-Add Two Numbers/index.html",revision:"870d8f890b83e10860b78140b27f759c"},{url:"Algorithms/LeetCode-21-Merge Two Sorted Lists/index.html",revision:"e677e9b2a7d8de8badd0a726aa7ae10b"},{url:"Algorithms/LeetCode-234-Palindrome Linked List/index.html",revision:"2192d2c0d7d57fae78e9a9771e51ac71"},{url:"Algorithms/LeetCode-238-Product of Array Except Self/index.html",revision:"753b891b82bb2caa79522e8b3f1d4040"},{url:"Algorithms/LeetCode-28-Implement strStr()/index.html",revision:"9ed1b34621c3c6c6a9f7a7600cb49fad"},{url:"Algorithms/LeetCode-347-Top K Frequent Elements/index.html",revision:"c5af8d7f26a1a7b51c81dbdf446330d5"},{url:"Algorithms/LeetCode-437-Path Sum Ⅲ/index.html",revision:"558a97cea4b954239d5c61638c9caa43"},{url:"Algorithms/LeetCode-48-Rotate Image/index.html",revision:"b7f2ecd540ad6081102d02df0ebf7782"},{url:"Algorithms/LeetCode-494-Target Sum/index.html",revision:"9cb50bdd4b67d23872eb4f37ac27d524"},{url:"Algorithms/LeetCode-62-Unique Paths/index.html",revision:"5e2aee6729fdb38d74add83c7cbbd7ce"},{url:"Algorithms/LeetCode-63-Unique Paths Ⅱ/index.html",revision:"11ed735071310a00231761b06451e935"},{url:"Algorithms/print_binarytree_by_level/index.html",revision:"c2512b2b78cc0d319d00fb836831f18b"},{url:"Algorithms/不重复打印排序数组中相加和为给定值的所有二元组_三元组/index.html",revision:"39d5e0489ab9e1d421296935f371b6b0"},{url:"Algorithms/二叉树的 Morris 遍历/index.html",revision:"fc558f986af01842a9372ccf4f766333"},{url:"Algorithms/最大公约数和最小公倍数/index.html",revision:"d83eee1a0918d7541e9adb3b2bf9aed6"},{url:"Algorithms/最大子序列和问题/index.html",revision:"f2a17936cac74759afc05208144454e4"},{url:"Algorithms/前中后序遍历的非递归实现/index.html",revision:"7129b6a908832b622abc652b23eac817"},{url:"Algorithms/单链表问题总结/index.html",revision:"80cb110e06ba2e7f20f9fc459dc6a4fe"},{url:"Algorithms/在其他数字都出现K次的数组中找到只出现1次的数字/index.html",revision:"878a8cbc8a27194ea780899ffca443fc"},{url:"Algorithms/打印出数组中出现次数大于N_K的数/index.html",revision:"cdfc6bd6a9e0440b0f500c5cb8a1cd85"},{url:"Algorithms/数根/index.html",revision:"1774c44cafa841beef4c15fb6451809d"},{url:"Algorithms/独木舟上的旅行/index.html",revision:"1dae1724b88812e9679505dd8400a484"},{url:"Algorithms/由前序和中序遍历恢复二叉树结构/index.html",revision:"26c2ccf73d8650ced354b29300f3e1c4"},{url:"Algorithms/背包问题/index.html",revision:"09e02171283f59ef263fcd43da00f8aa"},{url:"Algorithms/调整数组中元素的顺序/index.html",revision:"82ee5cd4ea0d00bab7c8d359b0c8649e"},{url:"Algorithms/转圈打印矩阵/index.html",revision:"d0df2e3fa2f1906749c977e99d8aadb3"},{url:"Algorithms/递归在二叉树相关题目中的应用/index.html",revision:"7fb46b888095af7b0b8153d6d3664736"},{url:"Algorithms/需要排序的最短子数组的长度/index.html",revision:"881af7e9d1d3ff7b617fd9e182665bee"},{url:"article/index.html",revision:"1eb28441377db0aea24a7d415e72d612"},{url:"category/index.html",revision:"c40139ecb2b386aaeacc11df9f8c2493"},{url:"encrypt/index.html",revision:"76299daadbce10b31a9ae3c4f18d9747"},{url:"index.html",revision:"ce5585d99938bcf7ca2afa0d6972ab76"},{url:"iOS/aspects_source_probe/index.html",revision:"cd6a49b60ae7663557ef20f275459f95"},{url:"iOS/easytuple_source_probe/index.html",revision:"83df91c03b8e09949888778bf7dda8c7"},{url:"iOS/index.html",revision:"bb864f30241b15bfcb3087414bf97128"},{url:"iOS/masonry_source_probe/index.html",revision:"5b778669525834b253dedf51d4e15957"},{url:"iOS/sdwebimage_cache/index.html",revision:"0238cdf36951bcaf6782fcae4b2dc26b"},{url:"iOS/sdwebimage_multithread/index.html",revision:"1a649eae0a0d3a4d396c169f02d3b5d6"},{url:"iOS/sdwebimage_network/index.html",revision:"86377c5323ac4a5c8655b7980a20cb4b"},{url:"iOS/揭开Runtime 的神秘面纱/index.html",revision:"c8a1a0dba72f40dc810ce5bd0199f001"},{url:"resume/index.html",revision:"c7dccef82bd30afd109209798007d60b"},{url:"slide/index.html",revision:"d0ed3040878c515c787a7e74960e5e9c"},{url:"star/index.html",revision:"94eb67e337efdbc32e072999d03567e2"},{url:"tag/index.html",revision:"6283d19f787495d67d2ab619a384c411"},{url:"timeline/index.html",revision:"82b231fb395a92252ae40b167265cf78"}],{}),e.cleanupOutdatedCaches()}));
//# sourceMappingURL=service-worker.js.map
addEventListener("message", (event) => {
  const replyPort = event.ports[0];
  const message = event.data;
  if (replyPort && message && message.type === "skip-waiting")
    event.waitUntil(
      self.skipWaiting().then(
        () => replyPort.postMessage({ error: null }),
        (error) => replyPort.postMessage({ error })
      )
    );
});
